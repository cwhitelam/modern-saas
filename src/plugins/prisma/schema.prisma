generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  uuid      String      @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String      @unique
  name      String
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?
  UserToken UserToken[]
  UserRole  UserRole[]
}

model Role {
  id       Int        @id @default(autoincrement())
  uuid     String     @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role     String     @unique
  UserRole UserRole[]
}

model UserRole {
  id        Int       @id @default(autoincrement())
  uuid      String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    Int
  roleId    Int
  user      User      @relation(fields: [userId], references: [id])
  role      Role      @relation(fields: [roleId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model UserToken {
  id        Int       @id @default(autoincrement())
  uuid      String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token     String
  userId    Int       @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [userId], references: [id])
}
